---
title: "Capstone in Cyber"
subtitle: "Spring '24"
details: UT Dallas
sidebar: false
toc: false
page-layout: full
column: page
format:
  html:
    # include-after-body: 
    # - styles.css
    # - custom-script.js
    template-partials:
      - html/home/title-block.html
course-logo: /files/img/sobolev-cyber-logo.png
---


- 1 2 3
  * 3 4 5

::: {.custom-details}

**::: {.custom-summary}**Click to see details**:::**

::: {.hidden-content}
This content is hidden by default and will be shown when the summary is clicked.
:::

:::



::: {.callout}

### Guidelines
This is an example of a callout with a title  3.
:::

text 1

::: {.callout-warning collapse="true"}
## Topic 2
This is an example of a callout with a title  3.
  ::: {.callout-warning collapse="true"}
  ## Topic 3
  This is an example of a callout with a title  3.
  :::

:::


::: {.grid}

::: {.g-col-6}
**Slides**

□ [Machine Learning](slides.pdf)
:::

::: {.g-col-6}
**Code** 

□ [R Handout 3: Machine Learning](R-Handout-3-ML-I.Rmd.zip)

□ [Dog Look as Data Table](dogs.txt)
:::

:::



# Materials

|  | | 
|----------|----------|
|**Slides**                        | **Code** | 
| □ [Machine Learning](slides.pdf) | □ [R Handout 3: Machine Learning](R-Handout-3-ML-I.Rmd.zip) | 
|                                  | □ [Dog Look as Data Table](dogs.txt)| 



# Servers

```{r}
url <- 'cyber-utd.github.io'
url
```

::: {.panel-tabset}
# Step 0
Content for tab 1.

# Step 1
Content for tab 1.

# Step 2
Content for tab 2.
:::

text

::: {.collapse}
### Collapsible Section Title
Content that can be shown or hidden.
:::

<details>
<summary>Click to expand
</summary>

Detailed content goes here.
</details>




Code Starts Here

<script type="text/javascript" src="//cdn.datacamp.com/dcl-react.js.gz"></script>

<div data-datacamp-exercise data-lang="r">

<code data-type="pre-exercise-code">

b <- c(33,22)

</code>

<code data-type="sample-code">
# Server 1

c <- 335

</code>

<code data-type="solution">
    # Create a variable a, equal to 5
    a <- 5

    # Print out a
    print(a)
</code>

<code data-type="sct">
#    test_object("a")
     test_object("b")
     test_object("c")
#    test_function("print")
    success_msg("Great job!")
</code>

  <div data-type="hint">Use the assignment operator</div>

</div>



<!--

-->

